name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    - name: Start services
      run: |
        docker-compose build
        docker-compose up -d
    - name: Wait for DB to be ready
      run: |
        for i in $(seq 1 10); do
          docker-compose logs db | grep "database system is ready to accept connections" && break
          sleep 5
        done
    - name: Populate database with schema
      run: docker-compose exec -T db psql -U eqtl_user -d eqtl_catalogue -f /data/test_db_schema.sql
    - name: Populate database with gene data
      run: docker-compose exec -T db psql -U eqtl_user -d eqtl_catalogue -c "\\COPY Gene FROM '/data/test_gene_data.sql' WITH (FORMAT text, DELIMITER E'\\t', HEADER false)"
    - name: Populate database with variant data
      run: docker-compose exec -T db psql -U eqtl_user -d eqtl_catalogue -c "\\COPY Variant FROM '/data/test_variant_data.sql' WITH (FORMAT text, DELIMITER E'\\t', HEADER false)"
    - name: Populate database with association data
      run: docker-compose exec -T db psql -U eqtl_user -d eqtl_catalogue -c "\\COPY Association FROM '/data/test_association_data.sql' WITH (FORMAT text, DELIMITER E'\\t', HEADER false)"
    - name: Wait for FastAPI to be ready
      run: |
        docker-compose logs backend & # Run logs in background
        for i in $(seq 1 10); do
          sleep 5
          curl -f http://localhost:8001/health && break
        done
    - name: Print backend logs
      run: docker-compose logs backend
    - name: Run tests
      run: |
        pytest backend/tests/